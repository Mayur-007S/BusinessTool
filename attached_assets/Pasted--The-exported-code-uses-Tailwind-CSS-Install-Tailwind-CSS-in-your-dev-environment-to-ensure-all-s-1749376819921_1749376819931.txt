// The exported code uses Tailwind CSS. Install Tailwind CSS in your dev environment to ensure all styles work.
import React, { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import {
  Table,
  TableBody,
  TableCaption,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { Label } from "@/components/ui/label";
import { Badge } from "@/components/ui/badge";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Separator } from "@/components/ui/separator";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Switch } from "@/components/ui/switch";
import * as echarts from "echarts";
const App: React.FC = () => {
  const [darkMode, setDarkMode] = useState<boolean>(false);
  const [activeTab, setActiveTab] = useState<string>("dashboard");
  const [showAddCustomerDialog, setShowAddCustomerDialog] =
    useState<boolean>(false);
  const [showAddSaleDialog, setShowAddSaleDialog] = useState<boolean>(false);
  const [currentDate] = useState<string>("June 8, 2025");
  const [showMobileNav, setShowMobileNav] = useState<boolean>(false);
  // Sample data
  const customers = [
    {
      id: 1,
      name: "John Smith",
      email: "john@example.com",
      phone: "+1 (555) 123-4567",
      address: "123 Business Ave, New York, NY",
    },
    {
      id: 2,
      name: "Sarah Johnson",
      email: "sarah@example.com",
      phone: "+1 (555) 987-6543",
      address: "456 Commerce St, San Francisco, CA",
    },
    {
      id: 3,
      name: "Michael Chen",
      email: "michael@example.com",
      phone: "+1 (555) 456-7890",
      address: "789 Market Rd, Chicago, IL",
    },
    {
      id: 4,
      name: "Emily Davis",
      email: "emily@example.com",
      phone: "+1 (555) 234-5678",
      address: "101 Enterprise Blvd, Austin, TX",
    },
    {
      id: 5,
      name: "Robert Wilson",
      email: "robert@example.com",
      phone: "+1 (555) 876-5432",
      address: "202 Industry Lane, Seattle, WA",
    },
  ];
  const sales = [
    {
      id: 1,
      product: "Premium Software License",
      price: 299.99,
      quantity: 2,
      total: 599.98,
      customer: "John Smith",
      date: "2025-06-07",
    },
    {
      id: 2,
      product: "Business Analytics Package",
      price: 149.99,
      quantity: 1,
      total: 149.99,
      customer: "Sarah Johnson",
      date: "2025-06-06",
    },
    {
      id: 3,
      product: "Cloud Storage Plan (1TB)",
      price: 49.99,
      quantity: 5,
      total: 249.95,
      customer: "Michael Chen",
      date: "2025-06-05",
    },
    {
      id: 4,
      product: "Enterprise Security Suite",
      price: 399.99,
      quantity: 1,
      total: 399.99,
      customer: "Emily Davis",
      date: "2025-06-04",
    },
    {
      id: 5,
      product: "Custom Integration Service",
      price: 499.99,
      quantity: 1,
      total: 499.99,
      customer: "Robert Wilson",
      date: "2025-06-03",
    },
  ];
  const inventory = [
    {
      id: 1,
      name: "Premium Software License",
      stock: 145,
      category: "Software",
      price: 299.99,
      status: "In Stock",
    },
    {
      id: 2,
      name: "Business Analytics Package",
      stock: 89,
      category: "Software",
      price: 149.99,
      status: "In Stock",
    },
    {
      id: 3,
      name: "Cloud Storage Plan (1TB)",
      stock: 230,
      category: "Services",
      price: 49.99,
      status: "In Stock",
    },
    {
      id: 4,
      name: "Enterprise Security Suite",
      stock: 12,
      category: "Software",
      price: 399.99,
      status: "Low Stock",
    },
    {
      id: 5,
      name: "Custom Integration Service",
      stock: 0,
      category: "Services",
      price: 499.99,
      status: "Out of Stock",
    },
  ];
  // Dashboard stats
  const dashboardStats = [
    {
      title: "Total Revenue",
      value: "$24,895.50",
      change: "+12.5%",
      icon: "fa-dollar-sign",
    },
    {
      title: "Active Customers",
      value: "358",
      change: "+8.2%",
      icon: "fa-users",
    },
    {
      title: "Sales This Month",
      value: "124",
      change: "+15.3%",
      icon: "fa-shopping-cart",
    },
    { title: "Inventory Items", value: "532", change: "+3.7%", icon: "fa-box" },
  ];
  // Initialize charts
  useEffect(() => {
    // Sales chart
    const salesChartElement = document.getElementById("sales-chart");
    if (salesChartElement) {
      const salesChart = echarts.init(salesChartElement);
      const salesOption = {
        animation: false,
        tooltip: {
          trigger: "axis",
        },
        legend: {
          data: ["Revenue", "Sales Count"],
          textStyle: {
            color: darkMode ? "#FFFFFF" : "#101010",
          },
        },
        grid: {
          left: "3%",
          right: "4%",
          bottom: "3%",
          containLabel: true,
        },
        xAxis: {
          type: "category",
          boundaryGap: false,
          data: ["Jan", "Feb", "Mar", "Apr", "May", "Jun"],
          axisLabel: {
            color: darkMode ? "#FFFFFF" : "#101010",
          },
        },
        yAxis: {
          type: "value",
          axisLabel: {
            color: darkMode ? "#FFFFFF" : "#101010",
          },
        },
        series: [
          {
            name: "Revenue",
            type: "line",
            data: [3200, 4500, 5800, 3900, 6000, 8200],
            lineStyle: {
              color: darkMode ? "#FF5C5C" : "#FE4F30",
            },
            itemStyle: {
              color: darkMode ? "#FF5C5C" : "#FE4F30",
            },
          },
          {
            name: "Sales Count",
            type: "line",
            data: [32, 45, 58, 39, 60, 82],
            lineStyle: {
              color: darkMode ? "#FFFFFF" : "#D6B9FC",
            },
            itemStyle: {
              color: darkMode ? "#FFFFFF" : "#D6B9FC",
            },
          },
        ],
      };
      salesChart.setOption(salesOption);
    }
    // Customer acquisition chart
    const customerChartElement = document.getElementById("customer-chart");
    if (customerChartElement) {
      const customerChart = echarts.init(customerChartElement);
      const customerOption = {
        animation: false,
        tooltip: {
          trigger: "item",
        },
        legend: {
          orient: "vertical",
          left: "left",
          textStyle: {
            color: darkMode ? "#FFFFFF" : "#101010",
          },
        },
        series: [
          {
            name: "Customer Source",
            type: "pie",
            radius: "70%",
            data: [
              { value: 45, name: "Direct" },
              { value: 27, name: "Referral" },
              { value: 18, name: "Social Media" },
              { value: 10, name: "Other" },
            ],
            emphasis: {
              itemStyle: {
                shadowBlur: 10,
                shadowOffsetX: 0,
                shadowColor: "rgba(0, 0, 0, 0.5)",
              },
            },
            itemStyle: {
              color: function (params: any) {
                const colorList = darkMode
                  ? ["#FF5C5C", "#4E596F", "#6E7991", "#8E99B1"]
                  : ["#FE4F30", "#D6B9FC", "#BFB4B0", "#101010"];
                return colorList[params.dataIndex];
              },
            },
          },
        ],
      };
      customerChart.setOption(customerOption);
    }
    // Inventory chart
    const inventoryChartElement = document.getElementById("inventory-chart");
    if (inventoryChartElement) {
      const inventoryChart = echarts.init(inventoryChartElement);
      const inventoryOption = {
        animation: false,
        tooltip: {
          trigger: "axis",
          axisPointer: {
            type: "shadow",
          },
        },
        legend: {
          textStyle: {
            color: darkMode ? "#FFFFFF" : "#101010",
          },
        },
        grid: {
          left: "3%",
          right: "4%",
          bottom: "3%",
          containLabel: true,
        },
        xAxis: {
          type: "value",
          axisLabel: {
            color: darkMode ? "#FFFFFF" : "#101010",
          },
        },
        yAxis: {
          type: "category",
          data: ["Software", "Services", "Hardware", "Support", "Training"],
          axisLabel: {
            color: darkMode ? "#FFFFFF" : "#101010",
          },
        },
        series: [
          {
            name: "In Stock",
            type: "bar",
            stack: "total",
            emphasis: {
              focus: "series",
            },
            data: [320, 302, 301, 334, 390],
            itemStyle: {
              color: darkMode ? "#4E596F" : "#D6B9FC",
            },
          },
          {
            name: "Low Stock",
            type: "bar",
            stack: "total",
            emphasis: {
              focus: "series",
            },
            data: [120, 132, 101, 134, 90],
            itemStyle: {
              color: darkMode ? "#FF5C5C" : "#FE4F30",
            },
          },
        ],
      };
      inventoryChart.setOption(inventoryOption);
    }
    // Update charts when theme changes
    return () => {
      const charts = [
        document.getElementById("sales-chart") &&
          echarts.getInstanceByDom(
            document.getElementById("sales-chart") as HTMLElement,
          ),
        document.getElementById("customer-chart") &&
          echarts.getInstanceByDom(
            document.getElementById("customer-chart") as HTMLElement,
          ),
        document.getElementById("inventory-chart") &&
          echarts.getInstanceByDom(
            document.getElementById("inventory-chart") as HTMLElement,
          ),
      ];
      charts.forEach((chart) => {
        chart && chart.dispose();
      });
    };
  }, [darkMode]);
  // Toggle dark mode
  const toggleDarkMode = () => {
    setDarkMode(!darkMode);
    document.documentElement.classList.toggle("dark");
  };
  return (
    <div
      className={`min-h-screen ${darkMode ? "bg-[#242A38] text-white" : "bg-white text-[#101010]"} transition-colors duration-300`}
    >
      <div className="flex h-screen overflow-hidden">
        {/* Sidebar */}
        <aside
          className={`w-64 ${darkMode ? "bg-[#4E596F]" : "bg-[#BFB4B0]"} transition-colors duration-300 flex-shrink-0 hidden md:block`}
        >
          <div className="p-6">
            <h1
              className={`text-2xl font-bold ${darkMode ? "text-white" : "text-[#101010]"}`}
            >
              BusinessPro
            </h1>
            <p
              className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
            >
              Business Management
            </p>
          </div>
          <nav className="mt-6">
            <ul className="space-y-2 px-4">
              {[
                {
                  id: "dashboard",
                  name: "Dashboard",
                  icon: "fa-tachometer-alt",
                },
                { id: "sales", name: "Sales", icon: "fa-shopping-cart" },
                { id: "inventory", name: "Inventory", icon: "fa-boxes" },
                { id: "customers", name: "Customers", icon: "fa-users" },
                {
                  id: "financial",
                  name: "Financial Reports",
                  icon: "fa-chart-line",
                },
                { id: "analytics", name: "Analytics", icon: "fa-chart-pie" },
                { id: "settings", name: "Settings", icon: "fa-cog" },
              ].map((item) => (
                <li key={item.id}>
                  <button
                    onClick={() => setActiveTab(item.id)}
                    className={`w-full flex items-center px-4 py-3 rounded-lg transition-colors duration-200 cursor-pointer !rounded-button whitespace-nowrap ${
                      activeTab === item.id
                        ? darkMode
                          ? "bg-[#FF5C5C] text-white"
                          : "bg-[#FE4F30] text-white"
                        : darkMode
                          ? "text-white hover:bg-[#4E596F]/80"
                          : "text-[#101010] hover:bg-[#BFB4B0]/80"
                    }`}
                  >
                    <i className={`fas ${item.icon} w-5 h-5 mr-3`}></i>
                    <span>{item.name}</span>
                  </button>
                </li>
              ))}
            </ul>
          </nav>
        </aside>
        {/* Main Content */}
        <main className="flex-1 flex flex-col overflow-hidden">
          {/* Header */}
          <header
            className={`h-16 flex items-center justify-between px-6 border-b ${darkMode ? "bg-[#242A38] border-[#4E596F]" : "bg-white border-gray-200"}`}
          >
            <div className="flex items-center md:hidden">
              <Button
                variant="ghost"
                size="icon"
                id="mobile-nav-toggle"
                onClick={() => setShowMobileNav(true)}
                className="!rounded-button cursor-pointer whitespace-nowrap"
              >
                <i className="fas fa-bars"></i>
              </Button>
              <h1 className="text-xl font-bold ml-3">BusinessPro</h1>
            </div>
            {/* Mobile Navigation Drawer */}
            {showMobileNav && (
              <div className="fixed inset-0 z-50 md:hidden">
                <div
                  className="fixed inset-0 bg-black/50"
                  onClick={() => setShowMobileNav(false)}
                ></div>
                <div
                  className={`fixed inset-y-0 left-0 w-64 ${darkMode ? "bg-[#4E596F]" : "bg-[#BFB4B0]"} transition-transform duration-300 transform`}
                >
                  <div className="flex items-center justify-between p-6">
                    <h1
                      className={`text-2xl font-bold ${darkMode ? "text-white" : "text-[#101010]"}`}
                    >
                      BusinessPro
                    </h1>
                    <Button
                      variant="ghost"
                      size="icon"
                      onClick={() => setShowMobileNav(false)}
                      className="!rounded-button cursor-pointer whitespace-nowrap"
                    >
                      <i className="fas fa-times"></i>
                    </Button>
                  </div>
                  <nav className="mt-6">
                    <ul className="space-y-2 px-4">
                      {[
                        {
                          id: "dashboard",
                          name: "Dashboard",
                          icon: "fa-tachometer-alt",
                        },
                        {
                          id: "sales",
                          name: "Sales",
                          icon: "fa-shopping-cart",
                        },
                        {
                          id: "inventory",
                          name: "Inventory",
                          icon: "fa-boxes",
                        },
                        {
                          id: "customers",
                          name: "Customers",
                          icon: "fa-users",
                        },
                        {
                          id: "financial",
                          name: "Financial Reports",
                          icon: "fa-chart-line",
                        },
                        {
                          id: "analytics",
                          name: "Analytics",
                          icon: "fa-chart-pie",
                        },
                        { id: "settings", name: "Settings", icon: "fa-cog" },
                      ].map((item) => (
                        <li key={item.id}>
                          <button
                            onClick={() => {
                              setActiveTab(item.id);
                              setShowMobileNav(false);
                            }}
                            className={`w-full flex items-center px-4 py-3 rounded-lg transition-colors duration-200 cursor-pointer !rounded-button whitespace-nowrap ${
                              activeTab === item.id
                                ? darkMode
                                  ? "bg-[#FF5C5C] text-white"
                                  : "bg-[#FE4F30] text-white"
                                : darkMode
                                  ? "text-white hover:bg-[#4E596F]/80"
                                  : "text-[#101010] hover:bg-[#BFB4B0]/80"
                            }`}
                          >
                            <i className={`fas ${item.icon} w-5 h-5 mr-3`}></i>
                            <span>{item.name}</span>
                          </button>
                        </li>
                      ))}
                    </ul>
                  </nav>
                </div>
              </div>
            )}
            <div className="flex-1 max-w-xl mx-auto md:mx-0 md:ml-8">
              <div className="relative">
                <Input
                  type="text"
                  placeholder="Search..."
                  className={`pl-10 border-none ${darkMode ? "bg-[#4E596F] text-white placeholder:text-white/50" : "bg-gray-100 text-[#101010] placeholder:text-[#101010]/50"}`}
                />
                <i className="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
              </div>
            </div>
            <div className="flex items-center space-x-4">
              <Button
                variant="ghost"
                size="icon"
                onClick={toggleDarkMode}
                className="!rounded-button cursor-pointer whitespace-nowrap"
              >
                <i className={`fas ${darkMode ? "fa-sun" : "fa-moon"}`}></i>
              </Button>
              <Button
                variant="ghost"
                size="icon"
                className="relative !rounded-button cursor-pointer whitespace-nowrap"
              >
                <i className="fas fa-bell"></i>
                <span
                  className={`absolute top-0 right-0 w-2 h-2 rounded-full ${darkMode ? "bg-[#FF5C5C]" : "bg-[#FE4F30]"}`}
                ></span>
              </Button>
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button
                    variant="ghost"
                    className="!rounded-button cursor-pointer whitespace-nowrap"
                  >
                    <Avatar className="h-8 w-8 mr-2">
                      <AvatarImage src="https://readdy.ai/api/search-image?query=professional%20business%20portrait%20of%20a%20young%20executive%20with%20neutral%20background%2C%20high%20quality%2C%20photorealistic%2C%20professional%20lighting&width=100&height=100&seq=avatar1&orientation=squarish" />
                      <AvatarFallback>AD</AvatarFallback>
                    </Avatar>
                    <span className="hidden md:inline">Admin User</span>
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent
                  align="end"
                  className={
                    darkMode
                      ? "bg-[#4E596F] text-white"
                      : "bg-white text-[#101010]"
                  }
                >
                  <DropdownMenuLabel>My Account</DropdownMenuLabel>
                  <DropdownMenuSeparator />
                  <DropdownMenuItem className="cursor-pointer">
                    <i className="fas fa-user mr-2"></i> Profile
                  </DropdownMenuItem>
                  <DropdownMenuItem className="cursor-pointer">
                    <i className="fas fa-cog mr-2"></i> Settings
                  </DropdownMenuItem>
                  <DropdownMenuSeparator />
                  <DropdownMenuItem className="cursor-pointer">
                    <i className="fas fa-sign-out-alt mr-2"></i> Logout
                  </DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
            </div>
          </header>
          {/* Content Area */}
          <div className="flex-1 overflow-y-auto p-6">
            {/* Dashboard */}
            {activeTab === "dashboard" && (
              <div className="space-y-6">
                <div className="flex items-center justify-between">
                  <div>
                    <h1 className="text-2xl font-bold">Dashboard</h1>
                    <p
                      className={`${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                    >
                      Welcome back, Admin. Here's your business overview.
                    </p>
                  </div>
                  <div className="flex items-center">
                    <span
                      className={`mr-2 ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                    >
                      {currentDate}
                    </span>
                    <Select defaultValue="today">
                      <SelectTrigger
                        className={`w-[180px] !rounded-button ${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                      >
                        <SelectValue placeholder="Select period" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="today">Today</SelectItem>
                        <SelectItem value="week">This Week</SelectItem>
                        <SelectItem value="month">This Month</SelectItem>
                        <SelectItem value="quarter">This Quarter</SelectItem>
                        <SelectItem value="year">This Year</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>
                {/* Stats Cards */}
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                  {dashboardStats.map((stat, index) => (
                    <Card
                      key={index}
                      className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                    >
                      <CardContent className="p-6">
                        <div className="flex items-center justify-between">
                          <div>
                            <p
                              className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                            >
                              {stat.title}
                            </p>
                            <h3 className="text-2xl font-bold mt-1">
                              {stat.value}
                            </h3>
                            <p
                              className={`text-sm mt-1 ${stat.change.startsWith("+") ? "text-green-500" : "text-red-500"}`}
                            >
                              {stat.change} from last month
                            </p>
                          </div>
                          <div
                            className={`w-12 h-12 rounded-full flex items-center justify-center ${darkMode ? "bg-[#FF5C5C]" : "bg-[#FE4F30]"}`}
                          >
                            <i className={`fas ${stat.icon} text-white`}></i>
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                  ))}
                </div>
                {/* Charts */}
                <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardHeader>
                      <CardTitle>Sales Performance</CardTitle>
                      <CardDescription
                        className={
                          darkMode ? "text-white/70" : "text-[#101010]/70"
                        }
                      >
                        Monthly revenue and sales count
                      </CardDescription>
                    </CardHeader>
                    <CardContent>
                      <div
                        id="sales-chart"
                        style={{ width: "100%", height: "300px" }}
                      ></div>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardHeader>
                      <CardTitle>Customer Acquisition</CardTitle>
                      <CardDescription
                        className={
                          darkMode ? "text-white/70" : "text-[#101010]/70"
                        }
                      >
                        Customer source breakdown
                      </CardDescription>
                    </CardHeader>
                    <CardContent>
                      <div
                        id="customer-chart"
                        style={{ width: "100%", height: "300px" }}
                      ></div>
                    </CardContent>
                  </Card>
                </div>
                {/* Recent Activity and Inventory Status */}
                <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardHeader className="flex flex-row items-center justify-between">
                      <div>
                        <CardTitle>Recent Sales</CardTitle>
                        <CardDescription
                          className={
                            darkMode ? "text-white/70" : "text-[#101010]/70"
                          }
                        >
                          Latest 5 transactions
                        </CardDescription>
                      </div>
                      <Button
                        variant="outline"
                        className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                      >
                        View All
                      </Button>
                    </CardHeader>
                    <CardContent>
                      <Table>
                        <TableHeader>
                          <TableRow
                            className={
                              darkMode ? "border-white/10" : "border-gray-200"
                            }
                          >
                            <TableHead>Product</TableHead>
                            <TableHead className="text-right">Amount</TableHead>
                            <TableHead>Customer</TableHead>
                            <TableHead>Date</TableHead>
                          </TableRow>
                        </TableHeader>
                        <TableBody>
                          {sales.slice(0, 5).map((sale) => (
                            <TableRow
                              key={sale.id}
                              className={
                                darkMode ? "border-white/10" : "border-gray-200"
                              }
                            >
                              <TableCell className="font-medium">
                                {sale.product}
                              </TableCell>
                              <TableCell className="text-right">
                                ${sale.total.toFixed(2)}
                              </TableCell>
                              <TableCell>{sale.customer}</TableCell>
                              <TableCell>{sale.date}</TableCell>
                            </TableRow>
                          ))}
                        </TableBody>
                      </Table>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardHeader className="flex flex-row items-center justify-between">
                      <div>
                        <CardTitle>Inventory Status</CardTitle>
                        <CardDescription
                          className={
                            darkMode ? "text-white/70" : "text-[#101010]/70"
                          }
                        >
                          Stock levels by category
                        </CardDescription>
                      </div>
                      <Button
                        variant="outline"
                        className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                      >
                        View All
                      </Button>
                    </CardHeader>
                    <CardContent>
                      <div
                        id="inventory-chart"
                        style={{ width: "100%", height: "300px" }}
                      ></div>
                    </CardContent>
                  </Card>
                </div>
              </div>
            )}
            {/* Sales */}
            {activeTab === "sales" && (
              <div className="space-y-6">
                <div className="flex items-center justify-between">
                  <div>
                    <h1 className="text-2xl font-bold">Sales Management</h1>
                    <p
                      className={`${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                    >
                      Manage your sales transactions and records
                    </p>
                  </div>
                  <Button
                    onClick={() => setShowAddSaleDialog(true)}
                    className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "bg-[#FF5C5C] hover:bg-[#FF5C5C]/90" : "bg-[#FE4F30] hover:bg-[#FE4F30]/90"}`}
                  >
                    <i className="fas fa-plus mr-2"></i> New Sale
                  </Button>
                </div>
                {/* Sales Overview Cards */}
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div>
                          <p
                            className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                          >
                            Today's Sales
                          </p>
                          <h3 className="text-2xl font-bold mt-1">$1,256.99</h3>
                          <p className="text-sm mt-1 text-green-500">
                            +15.3% from yesterday
                          </p>
                        </div>
                        <div
                          className={`w-12 h-12 rounded-full flex items-center justify-center ${darkMode ? "bg-[#FF5C5C]" : "bg-[#FE4F30]"}`}
                        >
                          <i className="fas fa-shopping-cart text-white"></i>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div>
                          <p
                            className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                          >
                            This Month
                          </p>
                          <h3 className="text-2xl font-bold mt-1">
                            $24,895.50
                          </h3>
                          <p className="text-sm mt-1 text-green-500">
                            +12.5% from last month
                          </p>
                        </div>
                        <div
                          className={`w-12 h-12 rounded-full flex items-center justify-center ${darkMode ? "bg-[#FF5C5C]" : "bg-[#FE4F30]"}`}
                        >
                          <i className="fas fa-calendar-alt text-white"></i>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div>
                          <p
                            className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                          >
                            Average Order
                          </p>
                          <h3 className="text-2xl font-bold mt-1">$198.35</h3>
                          <p className="text-sm mt-1 text-red-500">
                            -2.1% from last month
                          </p>
                        </div>
                        <div
                          className={`w-12 h-12 rounded-full flex items-center justify-center ${darkMode ? "bg-[#FF5C5C]" : "bg-[#FE4F30]"}`}
                        >
                          <i className="fas fa-receipt text-white"></i>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </div>
                {/* Sales Table */}
                <Card
                  className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                >
                  <CardHeader>
                    <div className="flex items-center justify-between">
                      <CardTitle>Sales Transactions</CardTitle>
                      <div className="flex items-center space-x-2">
                        <Input
                          type="text"
                          placeholder="Search sales..."
                          className={`w-64 border-none ${darkMode ? "bg-[#242A38] text-white placeholder:text-white/50" : "bg-gray-100 text-[#101010] placeholder:text-[#101010]/50"}`}
                        />
                        <DropdownMenu>
                          <DropdownMenuTrigger asChild>
                            <Button
                              variant="outline"
                              className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                            >
                              <i className="fas fa-filter mr-2"></i> Filter
                            </Button>
                          </DropdownMenuTrigger>
                          <DropdownMenuContent
                            align="end"
                            className={
                              darkMode
                                ? "bg-[#4E596F] text-white"
                                : "bg-white text-[#101010]"
                            }
                          >
                            <DropdownMenuLabel>
                              Filter Options
                            </DropdownMenuLabel>
                            <DropdownMenuSeparator />
                            <DropdownMenuItem className="cursor-pointer">
                              <i className="fas fa-calendar-alt mr-2"></i> Date
                              Range
                            </DropdownMenuItem>
                            <DropdownMenuItem className="cursor-pointer">
                              <i className="fas fa-dollar-sign mr-2"></i> Price
                              Range
                            </DropdownMenuItem>
                            <DropdownMenuItem className="cursor-pointer">
                              <i className="fas fa-tag mr-2"></i> Category
                            </DropdownMenuItem>
                            <DropdownMenuItem className="cursor-pointer">
                              <i className="fas fa-user mr-2"></i> Customer
                            </DropdownMenuItem>
                            <DropdownMenuSeparator />
                            <DropdownMenuItem className="cursor-pointer text-red-500">
                              <i className="fas fa-times mr-2"></i> Clear
                              Filters
                            </DropdownMenuItem>
                          </DropdownMenuContent>
                        </DropdownMenu>
                        <Button
                          variant="outline"
                          className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                        >
                          <i className="fas fa-download mr-2"></i> Export
                        </Button>
                      </div>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <Table>
                      <TableHeader>
                        <TableRow
                          className={
                            darkMode ? "border-white/10" : "border-gray-200"
                          }
                        >
                          <TableHead>ID</TableHead>
                          <TableHead>Product</TableHead>
                          <TableHead>Customer</TableHead>
                          <TableHead className="text-right">Price</TableHead>
                          <TableHead className="text-right">Quantity</TableHead>
                          <TableHead className="text-right">Total</TableHead>
                          <TableHead>Date</TableHead>
                          <TableHead className="text-right">Actions</TableHead>
                        </TableRow>
                      </TableHeader>
                      <TableBody>
                        {sales.map((sale) => (
                          <TableRow
                            key={sale.id}
                            className={
                              darkMode ? "border-white/10" : "border-gray-200"
                            }
                          >
                            <TableCell className="font-medium">
                              #{sale.id}
                            </TableCell>
                            <TableCell>{sale.product}</TableCell>
                            <TableCell>{sale.customer}</TableCell>
                            <TableCell className="text-right">
                              ${sale.price.toFixed(2)}
                            </TableCell>
                            <TableCell className="text-right">
                              {sale.quantity}
                            </TableCell>
                            <TableCell className="text-right">
                              ${sale.total.toFixed(2)}
                            </TableCell>
                            <TableCell>{sale.date}</TableCell>
                            <TableCell className="text-right">
                              <div className="flex items-center justify-end space-x-2">
                                <Button
                                  variant="ghost"
                                  size="icon"
                                  className="h-8 w-8 !rounded-button cursor-pointer whitespace-nowrap"
                                >
                                  <i className="fas fa-eye"></i>
                                </Button>
                                <Button
                                  variant="ghost"
                                  size="icon"
                                  className="h-8 w-8 !rounded-button cursor-pointer whitespace-nowrap"
                                >
                                  <i className="fas fa-edit"></i>
                                </Button>
                                <Button
                                  variant="ghost"
                                  size="icon"
                                  className="h-8 w-8 !rounded-button cursor-pointer whitespace-nowrap"
                                >
                                  <i className="fas fa-trash-alt"></i>
                                </Button>
                              </div>
                            </TableCell>
                          </TableRow>
                        ))}
                      </TableBody>
                    </Table>
                  </CardContent>
                  <CardFooter className="flex items-center justify-between">
                    <div
                      className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                    >
                      Showing 5 of 124 transactions
                    </div>
                    <div className="flex items-center space-x-2">
                      <Button
                        variant="outline"
                        size="sm"
                        className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                      >
                        <i className="fas fa-chevron-left mr-2"></i> Previous
                      </Button>
                      <Button
                        variant="outline"
                        size="sm"
                        className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                      >
                        Next <i className="fas fa-chevron-right ml-2"></i>
                      </Button>
                    </div>
                  </CardFooter>
                </Card>
              </div>
            )}
            {/* Inventory */}
            {activeTab === "inventory" && (
              <div className="space-y-6">
                <div className="flex items-center justify-between">
                  <div>
                    <h1 className="text-2xl font-bold">Inventory Management</h1>
                    <p
                      className={`${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                    >
                      Track and manage your product inventory
                    </p>
                  </div>
                  <Button
                    className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "bg-[#FF5C5C] hover:bg-[#FF5C5C]/90" : "bg-[#FE4F30] hover:bg-[#FE4F30]/90"}`}
                  >
                    <i className="fas fa-plus mr-2"></i> Add Product
                  </Button>
                </div>
                {/* Inventory Status Cards */}
                <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div>
                          <p
                            className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                          >
                            Total Products
                          </p>
                          <h3 className="text-2xl font-bold mt-1">532</h3>
                          <p className="text-sm mt-1 text-green-500">
                            +3.7% from last month
                          </p>
                        </div>
                        <div
                          className={`w-12 h-12 rounded-full flex items-center justify-center ${darkMode ? "bg-[#FF5C5C]" : "bg-[#FE4F30]"}`}
                        >
                          <i className="fas fa-box text-white"></i>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div>
                          <p
                            className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                          >
                            In Stock
                          </p>
                          <h3 className="text-2xl font-bold mt-1">476</h3>
                          <p className="text-sm mt-1 text-green-500">
                            89.5% of total
                          </p>
                        </div>
                        <div
                          className={`w-12 h-12 rounded-full flex items-center justify-center ${darkMode ? "bg-green-500" : "bg-green-500"}`}
                        >
                          <i className="fas fa-check text-white"></i>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div>
                          <p
                            className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                          >
                            Low Stock
                          </p>
                          <h3 className="text-2xl font-bold mt-1">42</h3>
                          <p className="text-sm mt-1 text-yellow-500">
                            7.9% of total
                          </p>
                        </div>
                        <div
                          className={`w-12 h-12 rounded-full flex items-center justify-center bg-yellow-500`}
                        >
                          <i className="fas fa-exclamation text-white"></i>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div>
                          <p
                            className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                          >
                            Out of Stock
                          </p>
                          <h3 className="text-2xl font-bold mt-1">14</h3>
                          <p className="text-sm mt-1 text-red-500">
                            2.6% of total
                          </p>
                        </div>
                        <div
                          className={`w-12 h-12 rounded-full flex items-center justify-center bg-red-500`}
                        >
                          <i className="fas fa-times text-white"></i>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </div>
                {/* Inventory Table */}
                <Card
                  className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                >
                  <CardHeader>
                    <div className="flex items-center justify-between">
                      <CardTitle>Inventory Items</CardTitle>
                      <div className="flex items-center space-x-2">
                        <Input
                          type="text"
                          placeholder="Search inventory..."
                          className={`w-64 border-none ${darkMode ? "bg-[#242A38] text-white placeholder:text-white/50" : "bg-gray-100 text-[#101010] placeholder:text-[#101010]/50"}`}
                        />
                        <DropdownMenu>
                          <DropdownMenuTrigger asChild>
                            <Button
                              variant="outline"
                              className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                            >
                              <i className="fas fa-filter mr-2"></i> Filter
                            </Button>
                          </DropdownMenuTrigger>
                          <DropdownMenuContent
                            align="end"
                            className={
                              darkMode
                                ? "bg-[#4E596F] text-white"
                                : "bg-white text-[#101010]"
                            }
                          >
                            <DropdownMenuLabel>
                              Filter Options
                            </DropdownMenuLabel>
                            <DropdownMenuSeparator />
                            <DropdownMenuItem className="cursor-pointer">
                              <i className="fas fa-calendar-alt mr-2"></i> Date
                              Range
                            </DropdownMenuItem>
                            <DropdownMenuItem className="cursor-pointer">
                              <i className="fas fa-dollar-sign mr-2"></i> Price
                              Range
                            </DropdownMenuItem>
                            <DropdownMenuItem className="cursor-pointer">
                              <i className="fas fa-tag mr-2"></i> Category
                            </DropdownMenuItem>
                            <DropdownMenuItem className="cursor-pointer">
                              <i className="fas fa-user mr-2"></i> Customer
                            </DropdownMenuItem>
                            <DropdownMenuSeparator />
                            <DropdownMenuItem className="cursor-pointer text-red-500">
                              <i className="fas fa-times mr-2"></i> Clear
                              Filters
                            </DropdownMenuItem>
                          </DropdownMenuContent>
                        </DropdownMenu>
                        <Button
                          variant="outline"
                          className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                        >
                          <i className="fas fa-download mr-2"></i> Export
                        </Button>
                      </div>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <Table>
                      <TableHeader>
                        <TableRow
                          className={
                            darkMode ? "border-white/10" : "border-gray-200"
                          }
                        >
                          <TableHead>ID</TableHead>
                          <TableHead>Product Name</TableHead>
                          <TableHead>Category</TableHead>
                          <TableHead className="text-right">Price</TableHead>
                          <TableHead className="text-right">Stock</TableHead>
                          <TableHead>Status</TableHead>
                          <TableHead className="text-right">Actions</TableHead>
                        </TableRow>
                      </TableHeader>
                      <TableBody>
                        {inventory.map((item) => (
                          <TableRow
                            key={item.id}
                            className={
                              darkMode ? "border-white/10" : "border-gray-200"
                            }
                          >
                            <TableCell className="font-medium">
                              #{item.id}
                            </TableCell>
                            <TableCell>{item.name}</TableCell>
                            <TableCell>{item.category}</TableCell>
                            <TableCell className="text-right">
                              ${item.price.toFixed(2)}
                            </TableCell>
                            <TableCell className="text-right">
                              {item.stock}
                            </TableCell>
                            <TableCell>
                              <Badge
                                className={`
${
  item.status === "In Stock"
    ? "bg-green-500"
    : item.status === "Low Stock"
      ? "bg-yellow-500"
      : "bg-red-500"
} text-white
`}
                              >
                                {item.status}
                              </Badge>
                            </TableCell>
                            <TableCell className="text-right">
                              <div className="flex items-center justify-end space-x-2">
                                <Button
                                  variant="ghost"
                                  size="icon"
                                  className="h-8 w-8 !rounded-button cursor-pointer whitespace-nowrap"
                                >
                                  <i className="fas fa-eye"></i>
                                </Button>
                                <Button
                                  variant="ghost"
                                  size="icon"
                                  className="h-8 w-8 !rounded-button cursor-pointer whitespace-nowrap"
                                >
                                  <i className="fas fa-edit"></i>
                                </Button>
                                <Button
                                  variant="ghost"
                                  size="icon"
                                  className="h-8 w-8 !rounded-button cursor-pointer whitespace-nowrap"
                                >
                                  <i className="fas fa-trash-alt"></i>
                                </Button>
                              </div>
                            </TableCell>
                          </TableRow>
                        ))}
                      </TableBody>
                    </Table>
                  </CardContent>
                  <CardFooter className="flex items-center justify-between">
                    <div
                      className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                    >
                      Showing 5 of 532 items
                    </div>
                    <div className="flex items-center space-x-2">
                      <Button
                        variant="outline"
                        size="sm"
                        className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                      >
                        <i className="fas fa-chevron-left mr-2"></i> Previous
                      </Button>
                      <Button
                        variant="outline"
                        size="sm"
                        className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                      >
                        Next <i className="fas fa-chevron-right ml-2"></i>
                      </Button>
                    </div>
                  </CardFooter>
                </Card>
              </div>
            )}
            {/* Customers */}
            {activeTab === "customers" && (
              <div className="space-y-6">
                <div className="flex items-center justify-between">
                  <div>
                    <h1 className="text-2xl font-bold">Customer Management</h1>
                    <p
                      className={`${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                    >
                      Manage your customer relationships
                    </p>
                  </div>
                  <Button
                    onClick={() => setShowAddCustomerDialog(true)}
                    className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "bg-[#FF5C5C] hover:bg-[#FF5C5C]/90" : "bg-[#FE4F30] hover:bg-[#FE4F30]/90"}`}
                  >
                    <i className="fas fa-plus mr-2"></i> Add Customer
                  </Button>
                </div>
                {/* Customer Stats */}
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div>
                          <p
                            className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                          >
                            Total Customers
                          </p>
                          <h3 className="text-2xl font-bold mt-1">358</h3>
                          <p className="text-sm mt-1 text-green-500">
                            +8.2% from last month
                          </p>
                        </div>
                        <div
                          className={`w-12 h-12 rounded-full flex items-center justify-center ${darkMode ? "bg-[#FF5C5C]" : "bg-[#FE4F30]"}`}
                        >
                          <i className="fas fa-users text-white"></i>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div>
                          <p
                            className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                          >
                            New Customers
                          </p>
                          <h3 className="text-2xl font-bold mt-1">42</h3>
                          <p className="text-sm mt-1 text-green-500">
                            This month
                          </p>
                        </div>
                        <div
                          className={`w-12 h-12 rounded-full flex items-center justify-center ${darkMode ? "bg-[#FF5C5C]" : "bg-[#FE4F30]"}`}
                        >
                          <i className="fas fa-user-plus text-white"></i>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div>
                          <p
                            className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                          >
                            Avg. Lifetime Value
                          </p>
                          <h3 className="text-2xl font-bold mt-1">$1,245.32</h3>
                          <p className="text-sm mt-1 text-green-500">
                            +5.7% from last month
                          </p>
                        </div>
                        <div
                          className={`w-12 h-12 rounded-full flex items-center justify-center ${darkMode ? "bg-[#FF5C5C]" : "bg-[#FE4F30]"}`}
                        >
                          <i className="fas fa-dollar-sign text-white"></i>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </div>
                {/* Customers Table */}
                <Card
                  className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                >
                  <CardHeader>
                    <div className="flex items-center justify-between">
                      <CardTitle>Customer Directory</CardTitle>
                      <div className="flex items-center space-x-2">
                        <Input
                          type="text"
                          placeholder="Search customers..."
                          className={`w-64 border-none ${darkMode ? "bg-[#242A38] text-white placeholder:text-white/50" : "bg-gray-100 text-[#101010] placeholder:text-[#101010]/50"}`}
                        />
                        <DropdownMenu>
                          <DropdownMenuTrigger asChild>
                            <Button
                              variant="outline"
                              className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                            >
                              <i className="fas fa-filter mr-2"></i> Filter
                            </Button>
                          </DropdownMenuTrigger>
                          <DropdownMenuContent
                            align="end"
                            className={
                              darkMode
                                ? "bg-[#4E596F] text-white"
                                : "bg-white text-[#101010]"
                            }
                          >
                            <DropdownMenuLabel>
                              Filter Options
                            </DropdownMenuLabel>
                            <DropdownMenuSeparator />
                            <DropdownMenuItem className="cursor-pointer">
                              <i className="fas fa-calendar-alt mr-2"></i> Date
                              Range
                            </DropdownMenuItem>
                            <DropdownMenuItem className="cursor-pointer">
                              <i className="fas fa-dollar-sign mr-2"></i> Price
                              Range
                            </DropdownMenuItem>
                            <DropdownMenuItem className="cursor-pointer">
                              <i className="fas fa-tag mr-2"></i> Category
                            </DropdownMenuItem>
                            <DropdownMenuItem className="cursor-pointer">
                              <i className="fas fa-user mr-2"></i> Customer
                            </DropdownMenuItem>
                            <DropdownMenuSeparator />
                            <DropdownMenuItem className="cursor-pointer text-red-500">
                              <i className="fas fa-times mr-2"></i> Clear
                              Filters
                            </DropdownMenuItem>
                          </DropdownMenuContent>
                        </DropdownMenu>
                        <Button
                          variant="outline"
                          className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                        >
                          <i className="fas fa-download mr-2"></i> Export
                        </Button>
                      </div>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <Table>
                      <TableHeader>
                        <TableRow
                          className={
                            darkMode ? "border-white/10" : "border-gray-200"
                          }
                        >
                          <TableHead>ID</TableHead>
                          <TableHead>Name</TableHead>
                          <TableHead>Email</TableHead>
                          <TableHead>Phone</TableHead>
                          <TableHead>Address</TableHead>
                          <TableHead className="text-right">Actions</TableHead>
                        </TableRow>
                      </TableHeader>
                      <TableBody>
                        {customers.map((customer) => (
                          <TableRow
                            key={customer.id}
                            className={
                              darkMode ? "border-white/10" : "border-gray-200"
                            }
                          >
                            <TableCell className="font-medium">
                              #{customer.id}
                            </TableCell>
                            <TableCell>{customer.name}</TableCell>
                            <TableCell>{customer.email}</TableCell>
                            <TableCell>{customer.phone}</TableCell>
                            <TableCell className="max-w-[200px] truncate">
                              {customer.address}
                            </TableCell>
                            <TableCell className="text-right">
                              <div className="flex items-center justify-end space-x-2">
                                <Button
                                  variant="ghost"
                                  size="icon"
                                  className="h-8 w-8 !rounded-button cursor-pointer whitespace-nowrap"
                                >
                                  <i className="fas fa-eye"></i>
                                </Button>
                                <Button
                                  variant="ghost"
                                  size="icon"
                                  className="h-8 w-8 !rounded-button cursor-pointer whitespace-nowrap"
                                >
                                  <i className="fas fa-edit"></i>
                                </Button>
                                <Button
                                  variant="ghost"
                                  size="icon"
                                  className="h-8 w-8 !rounded-button cursor-pointer whitespace-nowrap"
                                >
                                  <i className="fas fa-trash-alt"></i>
                                </Button>
                              </div>
                            </TableCell>
                          </TableRow>
                        ))}
                      </TableBody>
                    </Table>
                  </CardContent>
                  <CardFooter className="flex items-center justify-between">
                    <div
                      className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                    >
                      Showing 5 of 358 customers
                    </div>
                    <div className="flex items-center space-x-2">
                      <Button
                        variant="outline"
                        size="sm"
                        className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                      >
                        <i className="fas fa-chevron-left mr-2"></i> Previous
                      </Button>
                      <Button
                        variant="outline"
                        size="sm"
                        className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                      >
                        Next <i className="fas fa-chevron-right ml-2"></i>
                      </Button>
                    </div>
                  </CardFooter>
                </Card>
              </div>
            )}
            {/* Financial Reports */}
            {activeTab === "financial" && (
              <div className="space-y-6">
                <div className="flex items-center justify-between">
                  <div>
                    <h1 className="text-2xl font-bold">Financial Reports</h1>
                    <p
                      className={`${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                    >
                      View and analyze your business finances
                    </p>
                  </div>
                  <div className="flex items-center space-x-2">
                    <Select defaultValue="month">
                      <SelectTrigger
                        className={`w-[180px] !rounded-button ${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                      >
                        <SelectValue placeholder="Select period" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="week">This Week</SelectItem>
                        <SelectItem value="month">This Month</SelectItem>
                        <SelectItem value="quarter">This Quarter</SelectItem>
                        <SelectItem value="year">This Year</SelectItem>
                      </SelectContent>
                    </Select>
                    <Button
                      variant="outline"
                      className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
                    >
                      <i className="fas fa-download mr-2"></i> Export
                    </Button>
                  </div>
                </div>
                {/* Financial Overview */}
                <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div>
                          <p
                            className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                          >
                            Total Revenue
                          </p>
                          <h3 className="text-2xl font-bold mt-1">
                            $24,895.50
                          </h3>
                          <p className="text-sm mt-1 text-green-500">
                            +12.5% from last month
                          </p>
                        </div>
                        <div
                          className={`w-12 h-12 rounded-full flex items-center justify-center ${darkMode ? "bg-[#FF5C5C]" : "bg-[#FE4F30]"}`}
                        >
                          <i className="fas fa-dollar-sign text-white"></i>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div>
                          <p
                            className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                          >
                            Expenses
                          </p>
                          <h3 className="text-2xl font-bold mt-1">$9,342.75</h3>
                          <p className="text-sm mt-1 text-red-500">
                            +3.2% from last month
                          </p>
                        </div>
                        <div
                          className={`w-12 h-12 rounded-full flex items-center justify-center ${darkMode ? "bg-[#FF5C5C]" : "bg-[#FE4F30]"}`}
                        >
                          <i className="fas fa-receipt text-white"></i>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div>
                          <p
                            className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                          >
                            Profit
                          </p>
                          <h3 className="text-2xl font-bold mt-1">
                            $15,552.75
                          </h3>
                          <p className="text-sm mt-1 text-green-500">
                            +18.7% from last month
                          </p>
                        </div>
                        <div
                          className={`w-12 h-12 rounded-full flex items-center justify-center ${darkMode ? "bg-[#FF5C5C]" : "bg-[#FE4F30]"}`}
                        >
                          <i className="fas fa-chart-line text-white"></i>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div>
                          <p
                            className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                          >
                            Profit Margin
                          </p>
                          <h3 className="text-2xl font-bold mt-1">62.5%</h3>
                          <p className="text-sm mt-1 text-green-500">
                            +5.3% from last month
                          </p>
                        </div>
                        <div
                          className={`w-12 h-12 rounded-full flex items-center justify-center ${darkMode ? "bg-[#FF5C5C]" : "bg-[#FE4F30]"}`}
                        >
                          <i className="fas fa-percentage text-white"></i>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </div>
                {/* Revenue & Expenses Chart */}
                <Card
                  className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                >
                  <CardHeader>
                    <CardTitle>Revenue vs Expenses</CardTitle>
                    <CardDescription
                      className={
                        darkMode ? "text-white/70" : "text-[#101010]/70"
                      }
                    >
                      Monthly financial performance
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div
                      id="sales-chart"
                      style={{ width: "100%", height: "400px" }}
                    ></div>
                  </CardContent>
                </Card>
                {/* Top Products by Revenue */}
                <Card
                  className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                >
                  <CardHeader>
                    <CardTitle>Top Products by Revenue</CardTitle>
                    <CardDescription
                      className={
                        darkMode ? "text-white/70" : "text-[#101010]/70"
                      }
                    >
                      Best performing products this month
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <Table>
                      <TableHeader>
                        <TableRow
                          className={
                            darkMode ? "border-white/10" : "border-gray-200"
                          }
                        >
                          <TableHead>Product</TableHead>
                          <TableHead className="text-right">
                            Units Sold
                          </TableHead>
                          <TableHead className="text-right">Revenue</TableHead>
                          <TableHead className="text-right">Profit</TableHead>
                          <TableHead className="text-right">Margin</TableHead>
                        </TableRow>
                      </TableHeader>
                      <TableBody>
                        <TableRow
                          className={
                            darkMode ? "border-white/10" : "border-gray-200"
                          }
                        >
                          <TableCell className="font-medium">
                            Enterprise Security Suite
                          </TableCell>
                          <TableCell className="text-right">24</TableCell>
                          <TableCell className="text-right">
                            $9,599.76
                          </TableCell>
                          <TableCell className="text-right">
                            $6,719.83
                          </TableCell>
                          <TableCell className="text-right">70%</TableCell>
                        </TableRow>
                        <TableRow
                          className={
                            darkMode ? "border-white/10" : "border-gray-200"
                          }
                        >
                          <TableCell className="font-medium">
                            Custom Integration Service
                          </TableCell>
                          <TableCell className="text-right">18</TableCell>
                          <TableCell className="text-right">
                            $8,999.82
                          </TableCell>
                          <TableCell className="text-right">
                            $5,399.89
                          </TableCell>
                          <TableCell className="text-right">60%</TableCell>
                        </TableRow>
                        <TableRow
                          className={
                            darkMode ? "border-white/10" : "border-gray-200"
                          }
                        >
                          <TableCell className="font-medium">
                            Premium Software License
                          </TableCell>
                          <TableCell className="text-right">15</TableCell>
                          <TableCell className="text-right">
                            $4,499.85
                          </TableCell>
                          <TableCell className="text-right">
                            $3,149.90
                          </TableCell>
                          <TableCell className="text-right">70%</TableCell>
                        </TableRow>
                        <TableRow
                          className={
                            darkMode ? "border-white/10" : "border-gray-200"
                          }
                        >
                          <TableCell className="font-medium">
                            Business Analytics Package
                          </TableCell>
                          <TableCell className="text-right">12</TableCell>
                          <TableCell className="text-right">
                            $1,799.88
                          </TableCell>
                          <TableCell className="text-right">
                            $1,079.93
                          </TableCell>
                          <TableCell className="text-right">60%</TableCell>
                        </TableRow>
                        <TableRow
                          className={
                            darkMode ? "border-white/10" : "border-gray-200"
                          }
                        >
                          <TableCell className="font-medium">
                            Cloud Storage Plan (1TB)
                          </TableCell>
                          <TableCell className="text-right">35</TableCell>
                          <TableCell className="text-right">
                            $1,749.65
                          </TableCell>
                          <TableCell className="text-right">
                            $1,224.76
                          </TableCell>
                          <TableCell className="text-right">70%</TableCell>
                        </TableRow>
                      </TableBody>
                    </Table>
                  </CardContent>
                </Card>
              </div>
            )}
            {/* Analytics */}
            {activeTab === "analytics" && (
              <div className="space-y-6">
                <div className="flex items-center justify-between">
                  <div>
                    <h1 className="text-2xl font-bold">Analytics Dashboard</h1>
                    <p
                      className={`${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                    >
                      Customizable widgets for business intelligence
                    </p>
                  </div>
                  <div className="flex items-center space-x-2">
                    <Select defaultValue="month">
                      <SelectTrigger
                        className={`w-[180px] !rounded-button ${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                      >
                        <SelectValue placeholder="Select period" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="week">This Week</SelectItem>
                        <SelectItem value="month">This Month</SelectItem>
                        <SelectItem value="quarter">This Quarter</SelectItem>
                        <SelectItem value="year">This Year</SelectItem>
                      </SelectContent>
                    </Select>
                    <Button
                      className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "bg-[#FF5C5C] hover:bg-[#FF5C5C]/90" : "bg-[#FE4F30] hover:bg-[#FE4F30]/90"}`}
                    >
                      <i className="fas fa-plus mr-2"></i> Add Widget
                    </Button>
                  </div>
                </div>
                {/* Analytics Widgets */}
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardHeader className="flex flex-row items-center justify-between pb-2">
                      <div>
                        <CardTitle>Sales Performance</CardTitle>
                        <CardDescription
                          className={
                            darkMode ? "text-white/70" : "text-[#101010]/70"
                          }
                        >
                          Monthly revenue and sales count
                        </CardDescription>
                      </div>
                      <DropdownMenu>
                        <DropdownMenuTrigger asChild>
                          <Button
                            variant="ghost"
                            className="h-8 w-8 p-0 !rounded-button cursor-pointer whitespace-nowrap"
                          >
                            <i className="fas fa-ellipsis-v"></i>
                          </Button>
                        </DropdownMenuTrigger>
                        <DropdownMenuContent align="end">
                          <DropdownMenuItem className="cursor-pointer">
                            Edit Widget
                          </DropdownMenuItem>
                          <DropdownMenuItem className="cursor-pointer">
                            Download Data
                          </DropdownMenuItem>
                          <DropdownMenuItem className="cursor-pointer">
                            Remove Widget
                          </DropdownMenuItem>
                        </DropdownMenuContent>
                      </DropdownMenu>
                    </CardHeader>
                    <CardContent>
                      <div
                        id="sales-chart"
                        style={{ width: "100%", height: "300px" }}
                      ></div>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardHeader className="flex flex-row items-center justify-between pb-2">
                      <div>
                        <CardTitle>Customer Acquisition</CardTitle>
                        <CardDescription
                          className={
                            darkMode ? "text-white/70" : "text-[#101010]/70"
                          }
                        >
                          Customer source breakdown
                        </CardDescription>
                      </div>
                      <DropdownMenu>
                        <DropdownMenuTrigger asChild>
                          <Button
                            variant="ghost"
                            className="h-8 w-8 p-0 !rounded-button cursor-pointer whitespace-nowrap"
                          >
                            <i className="fas fa-ellipsis-v"></i>
                          </Button>
                        </DropdownMenuTrigger>
                        <DropdownMenuContent align="end">
                          <DropdownMenuItem className="cursor-pointer">
                            Edit Widget
                          </DropdownMenuItem>
                          <DropdownMenuItem className="cursor-pointer">
                            Download Data
                          </DropdownMenuItem>
                          <DropdownMenuItem className="cursor-pointer">
                            Remove Widget
                          </DropdownMenuItem>
                        </DropdownMenuContent>
                      </DropdownMenu>
                    </CardHeader>
                    <CardContent>
                      <div
                        id="customer-chart"
                        style={{ width: "100%", height: "300px" }}
                      ></div>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardHeader className="flex flex-row items-center justify-between pb-2">
                      <div>
                        <CardTitle>Inventory Status</CardTitle>
                        <CardDescription
                          className={
                            darkMode ? "text-white/70" : "text-[#101010]/70"
                          }
                        >
                          Stock levels by category
                        </CardDescription>
                      </div>
                      <DropdownMenu>
                        <DropdownMenuTrigger asChild>
                          <Button
                            variant="ghost"
                            className="h-8 w-8 p-0 !rounded-button cursor-pointer whitespace-nowrap"
                          >
                            <i className="fas fa-ellipsis-v"></i>
                          </Button>
                        </DropdownMenuTrigger>
                        <DropdownMenuContent align="end">
                          <DropdownMenuItem className="cursor-pointer">
                            Edit Widget
                          </DropdownMenuItem>
                          <DropdownMenuItem className="cursor-pointer">
                            Download Data
                          </DropdownMenuItem>
                          <DropdownMenuItem className="cursor-pointer">
                            Remove Widget
                          </DropdownMenuItem>
                        </DropdownMenuContent>
                      </DropdownMenu>
                    </CardHeader>
                    <CardContent>
                      <div
                        id="inventory-chart"
                        style={{ width: "100%", height: "300px" }}
                      ></div>
                    </CardContent>
                  </Card>
                  <Card
                    className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                  >
                    <CardHeader className="flex flex-row items-center justify-between pb-2">
                      <div>
                        <CardTitle>Top Customers</CardTitle>
                        <CardDescription
                          className={
                            darkMode ? "text-white/70" : "text-[#101010]/70"
                          }
                        >
                          By total purchase value
                        </CardDescription>
                      </div>
                      <DropdownMenu>
                        <DropdownMenuTrigger asChild>
                          <Button
                            variant="ghost"
                            className="h-8 w-8 p-0 !rounded-button cursor-pointer whitespace-nowrap"
                          >
                            <i className="fas fa-ellipsis-v"></i>
                          </Button>
                        </DropdownMenuTrigger>
                        <DropdownMenuContent align="end">
                          <DropdownMenuItem className="cursor-pointer">
                            Edit Widget
                          </DropdownMenuItem>
                          <DropdownMenuItem className="cursor-pointer">
                            Download Data
                          </DropdownMenuItem>
                          <DropdownMenuItem className="cursor-pointer">
                            Remove Widget
                          </DropdownMenuItem>
                        </DropdownMenuContent>
                      </DropdownMenu>
                    </CardHeader>
                    <CardContent>
                      <Table>
                        <TableHeader>
                          <TableRow
                            className={
                              darkMode ? "border-white/10" : "border-gray-200"
                            }
                          >
                            <TableHead>Customer</TableHead>
                            <TableHead className="text-right">Orders</TableHead>
                            <TableHead className="text-right">
                              Total Spent
                            </TableHead>
                          </TableRow>
                        </TableHeader>
                        <TableBody>
                          <TableRow
                            className={
                              darkMode ? "border-white/10" : "border-gray-200"
                            }
                          >
                            <TableCell className="font-medium">
                              John Smith
                            </TableCell>
                            <TableCell className="text-right">24</TableCell>
                            <TableCell className="text-right">
                              $12,458.75
                            </TableCell>
                          </TableRow>
                          <TableRow
                            className={
                              darkMode ? "border-white/10" : "border-gray-200"
                            }
                          >
                            <TableCell className="font-medium">
                              Sarah Johnson
                            </TableCell>
                            <TableCell className="text-right">18</TableCell>
                            <TableCell className="text-right">
                              $9,876.50
                            </TableCell>
                          </TableRow>
                          <TableRow
                            className={
                              darkMode ? "border-white/10" : "border-gray-200"
                            }
                          >
                            <TableCell className="font-medium">
                              Michael Chen
                            </TableCell>
                            <TableCell className="text-right">15</TableCell>
                            <TableCell className="text-right">
                              $7,654.25
                            </TableCell>
                          </TableRow>
                          <TableRow
                            className={
                              darkMode ? "border-white/10" : "border-gray-200"
                            }
                          >
                            <TableCell className="font-medium">
                              Emily Davis
                            </TableCell>
                            <TableCell className="text-right">12</TableCell>
                            <TableCell className="text-right">
                              $6,543.75
                            </TableCell>
                          </TableRow>
                          <TableRow
                            className={
                              darkMode ? "border-white/10" : "border-gray-200"
                            }
                          >
                            <TableCell className="font-medium">
                              Robert Wilson
                            </TableCell>
                            <TableCell className="text-right">9</TableCell>
                            <TableCell className="text-right">
                              $4,987.50
                            </TableCell>
                          </TableRow>
                        </TableBody>
                      </Table>
                    </CardContent>
                  </Card>
                </div>
              </div>
            )}
            {/* Settings */}
            {activeTab === "settings" && (
              <div className="space-y-6">
                <div>
                  <h1 className="text-2xl font-bold">Settings</h1>
                  <p
                    className={`${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                  >
                    Manage your account and application preferences
                  </p>
                </div>
                <Tabs defaultValue="account" className="w-full">
                  <TabsList
                    className={`grid w-full grid-cols-4 ${darkMode ? "bg-[#242A38]" : "bg-gray-100"}`}
                  >
                    <TabsTrigger
                      value="account"
                      className="!rounded-button cursor-pointer whitespace-nowrap"
                    >
                      Account
                    </TabsTrigger>
                    <TabsTrigger
                      value="appearance"
                      className="!rounded-button cursor-pointer whitespace-nowrap"
                    >
                      Appearance
                    </TabsTrigger>
                    <TabsTrigger
                      value="notifications"
                      className="!rounded-button cursor-pointer whitespace-nowrap"
                    >
                      Notifications
                    </TabsTrigger>
                    <TabsTrigger
                      value="security"
                      className="!rounded-button cursor-pointer whitespace-nowrap"
                    >
                      Security
                    </TabsTrigger>
                  </TabsList>
                  <TabsContent value="account">
                    <Card
                      className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                    >
                      <CardHeader>
                        <CardTitle>Account Information</CardTitle>
                        <CardDescription
                          className={
                            darkMode ? "text-white/70" : "text-[#101010]/70"
                          }
                        >
                          Update your account details and preferences.
                        </CardDescription>
                      </CardHeader>
                      <CardContent className="space-y-4">
                        <div className="space-y-2">
                          <Label htmlFor="name">Name</Label>
                          <Input
                            id="name"
                            defaultValue="Admin User"
                            className={`border-none ${darkMode ? "bg-[#242A38] text-white" : "bg-gray-100 text-[#101010]"}`}
                          />
                        </div>
                        <div className="space-y-2">
                          <Label htmlFor="email">Email</Label>
                          <Input
                            id="email"
                            defaultValue="admin@businesspro.com"
                            className={`border-none ${darkMode ? "bg-[#242A38] text-white" : "bg-gray-100 text-[#101010]"}`}
                          />
                        </div>
                        <div className="space-y-2">
                          <Label htmlFor="company">Company</Label>
                          <Input
                            id="company"
                            defaultValue="BusinessPro Inc."
                            className={`border-none ${darkMode ? "bg-[#242A38] text-white" : "bg-gray-100 text-[#101010]"}`}
                          />
                        </div>
                      </CardContent>
                      <CardFooter>
                        <Button
                          className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "bg-[#FF5C5C] hover:bg-[#FF5C5C]/90" : "bg-[#FE4F30] hover:bg-[#FE4F30]/90"}`}
                        >
                          Save Changes
                        </Button>
                      </CardFooter>
                    </Card>
                  </TabsContent>
                  <TabsContent value="appearance">
                    <Card
                      className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                    >
                      <CardHeader>
                        <CardTitle>Appearance Settings</CardTitle>
                        <CardDescription
                          className={
                            darkMode ? "text-white/70" : "text-[#101010]/70"
                          }
                        >
                          Customize how the application looks.
                        </CardDescription>
                      </CardHeader>
                      <CardContent className="space-y-4">
                        <div className="flex items-center justify-between">
                          <div className="space-y-0.5">
                            <Label htmlFor="dark-mode">Dark Mode</Label>
                            <p
                              className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                            >
                              Toggle between light and dark themes
                            </p>
                          </div>
                          <Switch
                            id="dark-mode"
                            checked={darkMode}
                            onCheckedChange={toggleDarkMode}
                          />
                        </div>
                        <Separator
                          className={darkMode ? "bg-white/10" : "bg-gray-200"}
                        />
                        <div className="space-y-2">
                          <Label>Accent Color</Label>
                          <div className="flex items-center space-x-2">
                            {[
                              "bg-[#FE4F30]",
                              "bg-blue-500",
                              "bg-green-500",
                              "bg-purple-500",
                              "bg-yellow-500",
                            ].map((color, index) => (
                              <div
                                key={index}
                                className={`w-8 h-8 rounded-full ${color} cursor-pointer ${index === 0 ? "ring-2 ring-offset-2 ring-offset-white ring-black" : ""}`}
                              ></div>
                            ))}
                          </div>
                        </div>
                      </CardContent>
                      <CardFooter>
                        <Button
                          className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "bg-[#FF5C5C] hover:bg-[#FF5C5C]/90" : "bg-[#FE4F30] hover:bg-[#FE4F30]/90"}`}
                        >
                          Save Changes
                        </Button>
                      </CardFooter>
                    </Card>
                  </TabsContent>
                  <TabsContent value="notifications">
                    <Card
                      className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                    >
                      <CardHeader>
                        <CardTitle>Notification Preferences</CardTitle>
                        <CardDescription
                          className={
                            darkMode ? "text-white/70" : "text-[#101010]/70"
                          }
                        >
                          Manage your notification settings.
                        </CardDescription>
                      </CardHeader>
                      <CardContent className="space-y-4">
                        <div className="flex items-center justify-between">
                          <div className="space-y-0.5">
                            <Label>Email Notifications</Label>
                            <p
                              className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                            >
                              Receive notifications via email
                            </p>
                          </div>
                          <Switch defaultChecked />
                        </div>
                        <Separator
                          className={darkMode ? "bg-white/10" : "bg-gray-200"}
                        />
                        <div className="flex items-center justify-between">
                          <div className="space-y-0.5">
                            <Label>Sales Alerts</Label>
                            <p
                              className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                            >
                              Get notified about new sales
                            </p>
                          </div>
                          <Switch defaultChecked />
                        </div>
                        <Separator
                          className={darkMode ? "bg-white/10" : "bg-gray-200"}
                        />
                        <div className="flex items-center justify-between">
                          <div className="space-y-0.5">
                            <Label>Inventory Alerts</Label>
                            <p
                              className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                            >
                              Get notified about low stock items
                            </p>
                          </div>
                          <Switch defaultChecked />
                        </div>
                        <Separator
                          className={darkMode ? "bg-white/10" : "bg-gray-200"}
                        />
                        <div className="flex items-center justify-between">
                          <div className="space-y-0.5">
                            <Label>Customer Updates</Label>
                            <p
                              className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                            >
                              Get notified about customer activity
                            </p>
                          </div>
                          <Switch />
                        </div>
                      </CardContent>
                      <CardFooter>
                        <Button
                          className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "bg-[#FF5C5C] hover:bg-[#FF5C5C]/90" : "bg-[#FE4F30] hover:bg-[#FE4F30]/90"}`}
                        >
                          Save Changes
                        </Button>
                      </CardFooter>
                    </Card>
                  </TabsContent>
                  <TabsContent value="security">
                    <Card
                      className={`${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
                    >
                      <CardHeader>
                        <CardTitle>Security Settings</CardTitle>
                        <CardDescription
                          className={
                            darkMode ? "text-white/70" : "text-[#101010]/70"
                          }
                        >
                          Manage your account security.
                        </CardDescription>
                      </CardHeader>
                      <CardContent className="space-y-4">
                        <div className="space-y-2">
                          <Label htmlFor="current-password">
                            Current Password
                          </Label>
                          <Input
                            id="current-password"
                            type="password"
                            className={`border-none ${darkMode ? "bg-[#242A38] text-white" : "bg-gray-100 text-[#101010]"}`}
                          />
                        </div>
                        <div className="space-y-2">
                          <Label htmlFor="new-password">New Password</Label>
                          <Input
                            id="new-password"
                            type="password"
                            className={`border-none ${darkMode ? "bg-[#242A38] text-white" : "bg-gray-100 text-[#101010]"}`}
                          />
                        </div>
                        <div className="space-y-2">
                          <Label htmlFor="confirm-password">
                            Confirm New Password
                          </Label>
                          <Input
                            id="confirm-password"
                            type="password"
                            className={`border-none ${darkMode ? "bg-[#242A38] text-white" : "bg-gray-100 text-[#101010]"}`}
                          />
                        </div>
                        <Separator
                          className={darkMode ? "bg-white/10" : "bg-gray-200"}
                        />
                        <div className="flex items-center justify-between">
                          <div className="space-y-0.5">
                            <Label>Two-Factor Authentication</Label>
                            <p
                              className={`text-sm ${darkMode ? "text-white/70" : "text-[#101010]/70"}`}
                            >
                              Add an extra layer of security to your account
                            </p>
                          </div>
                          <Switch />
                        </div>
                      </CardContent>
                      <CardFooter>
                        <Button
                          className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "bg-[#FF5C5C] hover:bg-[#FF5C5C]/90" : "bg-[#FE4F30] hover:bg-[#FE4F30]/90"}`}
                        >
                          Update Password
                        </Button>
                      </CardFooter>
                    </Card>
                  </TabsContent>
                </Tabs>
              </div>
            )}
          </div>
        </main>
      </div>
      {/* Add Customer Dialog */}
      <Dialog
        open={showAddCustomerDialog}
        onOpenChange={setShowAddCustomerDialog}
      >
        <DialogContent
          className={`sm:max-w-[425px] ${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
        >
          <DialogHeader>
            <DialogTitle>Add New Customer</DialogTitle>
            <DialogDescription
              className={darkMode ? "text-white/70" : "text-[#101010]/70"}
            >
              Enter the customer details below.
            </DialogDescription>
          </DialogHeader>
          <div className="grid gap-4 py-4">
            <div className="grid grid-cols-4 items-center gap-4">
              <Label htmlFor="name" className="text-right">
                Name
              </Label>
              <Input
                id="name"
                className={`col-span-3 border-none ${darkMode ? "bg-[#242A38] text-white" : "bg-gray-100 text-[#101010]"}`}
              />
            </div>
            <div className="grid grid-cols-4 items-center gap-4">
              <Label htmlFor="email" className="text-right">
                Email
              </Label>
              <Input
                id="email"
                className={`col-span-3 border-none ${darkMode ? "bg-[#242A38] text-white" : "bg-gray-100 text-[#101010]"}`}
              />
            </div>
            <div className="grid grid-cols-4 items-center gap-4">
              <Label htmlFor="phone" className="text-right">
                Phone
              </Label>
              <Input
                id="phone"
                className={`col-span-3 border-none ${darkMode ? "bg-[#242A38] text-white" : "bg-gray-100 text-[#101010]"}`}
              />
            </div>
            <div className="grid grid-cols-4 items-center gap-4">
              <Label htmlFor="address" className="text-right">
                Address
              </Label>
              <Input
                id="address"
                className={`col-span-3 border-none ${darkMode ? "bg-[#242A38] text-white" : "bg-gray-100 text-[#101010]"}`}
              />
            </div>
          </div>
          <DialogFooter>
            <Button
              variant="outline"
              onClick={() => setShowAddCustomerDialog(false)}
              className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
            >
              Cancel
            </Button>
            <Button
              type="submit"
              onClick={() => setShowAddCustomerDialog(false)}
              className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "bg-[#FF5C5C] hover:bg-[#FF5C5C]/90" : "bg-[#FE4F30] hover:bg-[#FE4F30]/90"}`}
            >
              Add Customer
            </Button>
          </DialogFooter>
        </DialogContent>
      </Dialog>
      {/* Add Sale Dialog */}
      <Dialog open={showAddSaleDialog} onOpenChange={setShowAddSaleDialog}>
        <DialogContent
          className={`sm:max-w-[425px] ${darkMode ? "bg-[#4E596F] text-white border-[#4E596F]" : "bg-white text-[#101010]"}`}
        >
          <DialogHeader>
            <DialogTitle>Add New Sale</DialogTitle>
            <DialogDescription
              className={darkMode ? "text-white/70" : "text-[#101010]/70"}
            >
              Enter the sale details below.
            </DialogDescription>
          </DialogHeader>
          <div className="grid gap-4 py-4">
            <div className="grid grid-cols-4 items-center gap-4">
              <Label htmlFor="product" className="text-right">
                Product
              </Label>
              <Select>
                <SelectTrigger
                  className={`col-span-3 !rounded-button ${darkMode ? "bg-[#242A38] text-white border-[#242A38]" : "bg-gray-100 text-[#101010] border-gray-100"}`}
                >
                  <SelectValue placeholder="Select product" />
                </SelectTrigger>
                <SelectContent>
                  {inventory.map((item) => (
                    <SelectItem
                      key={item.id}
                      value={item.name.toLowerCase().replace(/\s+/g, "-")}
                    >
                      {item.name}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>
            <div className="grid grid-cols-4 items-center gap-4">
              <Label htmlFor="customer" className="text-right">
                Customer
              </Label>
              <Select>
                <SelectTrigger
                  className={`col-span-3 !rounded-button ${darkMode ? "bg-[#242A38] text-white border-[#242A38]" : "bg-gray-100 text-[#101010] border-gray-100"}`}
                >
                  <SelectValue placeholder="Select customer" />
                </SelectTrigger>
                <SelectContent>
                  {customers.map((customer) => (
                    <SelectItem
                      key={customer.id}
                      value={customer.name.toLowerCase().replace(/\s+/g, "-")}
                    >
                      {customer.name}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>
            <div className="grid grid-cols-4 items-center gap-4">
              <Label htmlFor="quantity" className="text-right">
                Quantity
              </Label>
              <Input
                id="quantity"
                type="number"
                min="1"
                defaultValue="1"
                className={`col-span-3 border-none ${darkMode ? "bg-[#242A38] text-white" : "bg-gray-100 text-[#101010]"}`}
              />
            </div>
            <div className="grid grid-cols-4 items-center gap-4">
              <Label htmlFor="price" className="text-right">
                Price
              </Label>
              <Input
                id="price"
                type="number"
                min="0.01"
                step="0.01"
                defaultValue="0.00"
                className={`col-span-3 border-none ${darkMode ? "bg-[#242A38] text-white" : "bg-gray-100 text-[#101010]"}`}
              />
            </div>
          </div>
          <DialogFooter>
            <Button
              variant="outline"
              onClick={() => setShowAddSaleDialog(false)}
              className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "text-white border-white/20 hover:bg-[#242A38]/20" : "text-[#101010] border-[#101010]/20 hover:bg-gray-100"}`}
            >
              Cancel
            </Button>
            <Button
              type="submit"
              onClick={() => setShowAddSaleDialog(false)}
              className={`!rounded-button cursor-pointer whitespace-nowrap ${darkMode ? "bg-[#FF5C5C] hover:bg-[#FF5C5C]/90" : "bg-[#FE4F30] hover:bg-[#FE4F30]/90"}`}
            >
              Add Sale
            </Button>
          </DialogFooter>
        </DialogContent>
      </Dialog>
    </div>
  );
};
export default App;
